server:
  port: 8090
  servlet:
    session:
      timeout: 30m  # 분단위 30m, 초단위 1800

spring:
  application:
    name: sec02_basic
  datasource:
    url: jdbc:mysql://localhost:3306/secStudy?createDatabaseIfNotExist=true
    username: root
    password: 12345
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      minimum-idle: 5
      maximum-pool-size: 10
      idle-timeout: 30000
      max-lifetime: 1800000
      connection-timeout: 30000
      auto-commit: true
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 110MB
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#					이 설정은 Hibernate가 데이터베이스 테이블과 컬럼의 물리적 이름을 어떻게 생성할지 결정합니다.
#					주요 값과 설명은 다음과 같습니다:
#
#					주요 값
#					org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#					  엔티티의 이름을 그대로 데이터베이스 테이블과 컬럼 이름으로 사용합니다.
#					  예: User 엔티티 → User 테이블, firstName 필드 → firstName 컬럼.
#					org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
#					  카멜 케이스(CamelCase)를 스네이크 케이스(snake_case)로 변환합니다.
#					  예: User 엔티티 → user 테이블, firstName 필드 → first_name 컬럼.
#					org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#					  Spring Boot의 기본 물리적 네이밍 전략입니다.
#					  카멜 케이스를 스네이크 케이스로 변환하며, 점(.)을 언더스코어(_)로 변환합니다.
#					  예: User 엔티티 → user 테이블, firstName 필드 → first_name 컬럼.					

#  security:
#    user:
#      password: # 비밀번호를 정의하지 않으면 기본비밀번호 비활성화

jwt:
  secret: jwts3cur!ty