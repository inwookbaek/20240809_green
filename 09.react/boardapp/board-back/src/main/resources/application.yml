server:
  host: ${SERVER_HOST:localhost}  # 환경변수 없으면 기본값 localhost
  port: ${SERVER_PORT:8090}

spring:
  application:
    name: board-back
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 110MB
      enabled: true     
  datasource:
    # url: jdbc:mysql://localhost:3306/boarddb?createDatabaseIfNotExist=true
    # url: jdbc:mysql://host.docker.internal:3306/boarddb?createDatabaseIfNotExist=true # 로컬 mysql 접속
    # 컨테이너 내부에서는 항상 MySQL의 내부 포트(3306)로 접속해야 한다.
    # 도커컨테이너가 -p 3307:3306 즉 외부포터 3307이라도 도커내부포터 항숭 3306으로 접속해야 한다.
    url: jdbc:mysql://mysql-container:3306/boarddb?createDatabaseIfNotExist=true # 도커컨테이너
    username: root
    password: 12345
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      minimum-idle: 5
      maximum-pool-size: 10
      idle-timeout: 30000
      max-lifetime: 1800000
      connection-timeout: 30000
      auto-commit: true
  jpa:
    hibernate:
      ddl-auto: update
      #naming:
      #  physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  thymeleaf:
    cache: false
    mode: HTML
    prefix: classpath:/templates/
    suffix: .html

upload:
  url: http://${server.host}:${server.port}/file/
  # https에서는 url: https://${server.host:localhost}:${server.port}/file/
  path: ${user.home}/app_uploads/   # WINDOWS : 시스템 기본 위치 또는 절대 경로
  # Windows에서는 C:\Users\사용자명\uploads\, Linux에서는 /home/사용자명/app_uploads/, macOS에서는 /Users/사용자명/app_uploads/
  # path: ./uploads/            # 상대 경로 (애플리케이션 실행 위치 기준)
  # path: classpath:uploads/    # classpath 내부 (jar 패키징 시 주의 필요),  src/main/resources/uploads/ 

# 키생성 : openssl rand -base64 32 
# 키(secret)값은 base64 32비트 문자열 또는 임의문자열(예 S3cr3tK3y!)을 설정해도 가능
# ms : 1000*60*60*24 = 24시간
jwt:
  secret: DdqOm0p+pbVNqhj12jafRAnzF62IyfOSFbzeIjTWvLY=
  expiration: 86400000  # (1일 = 1000 * 60 * 60 * 24)                                